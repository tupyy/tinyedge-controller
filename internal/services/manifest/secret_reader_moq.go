// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package manifest

import (
	"context"
	"github.com/tupyy/tinyedge-controller/internal/entity"
	"sync"
)

// Ensure, that SecretReaderMock does implement SecretReader.
// If this is not the case, regenerate this file with moq.
var _ SecretReader = &SecretReaderMock{}

// SecretReaderMock is a mock implementation of SecretReader.
//
//	func TestSomethingThatUsesSecretReader(t *testing.T) {
//
//		// make and configure a mocked SecretReader
//		mockedSecretReader := &SecretReaderMock{
//			GetSecretFunc: func(ctx context.Context, path string, key string) (entity.Secret, error) {
//				panic("mock out the GetSecret method")
//			},
//		}
//
//		// use mockedSecretReader in code that requires SecretReader
//		// and then make assertions.
//
//	}
type SecretReaderMock struct {
	// GetSecretFunc mocks the GetSecret method.
	GetSecretFunc func(ctx context.Context, path string, key string) (entity.Secret, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetSecret holds details about calls to the GetSecret method.
		GetSecret []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Path is the path argument value.
			Path string
			// Key is the key argument value.
			Key string
		}
	}
	lockGetSecret sync.RWMutex
}

// GetSecret calls GetSecretFunc.
func (mock *SecretReaderMock) GetSecret(ctx context.Context, path string, key string) (entity.Secret, error) {
	if mock.GetSecretFunc == nil {
		panic("SecretReaderMock.GetSecretFunc: method is nil but SecretReader.GetSecret was just called")
	}
	callInfo := struct {
		Ctx  context.Context
		Path string
		Key  string
	}{
		Ctx:  ctx,
		Path: path,
		Key:  key,
	}
	mock.lockGetSecret.Lock()
	mock.calls.GetSecret = append(mock.calls.GetSecret, callInfo)
	mock.lockGetSecret.Unlock()
	return mock.GetSecretFunc(ctx, path, key)
}

// GetSecretCalls gets all the calls that were made to GetSecret.
// Check the length with:
//
//	len(mockedSecretReader.GetSecretCalls())
func (mock *SecretReaderMock) GetSecretCalls() []struct {
	Ctx  context.Context
	Path string
	Key  string
} {
	var calls []struct {
		Ctx  context.Context
		Path string
		Key  string
	}
	mock.lockGetSecret.RLock()
	calls = mock.calls.GetSecret
	mock.lockGetSecret.RUnlock()
	return calls
}

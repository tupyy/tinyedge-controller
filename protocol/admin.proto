syntax = "proto3";

option go_package = "github.com/tupyy/tinyedge-controller/pkg/grpc/admin";

import "common.proto";

service AdminService {
    // GetDevices returns a list of devices.
    rpc GetDevices(DevicesListRequest) returns (DevicesListResponse) {}

    // GetDevice returns a device.
    rpc GetDevice(IdRequest) returns (Device) {}
    
    // AddWorkloadToSet add a device to a set.
    rpc UpdateDevice(UpdateDeviceRequest) returns (Device) {}
    
    // GetSets returns a list of device sets.
    rpc GetSets(ListRequest) returns (SetsListResponse) {}
    
    // GetSet returns a device set.
    rpc GetSet(IdRequest) returns (Set) {}

    // AddSet adds a set
    rpc AddSet(AddSetRequest) returns (Set) {}

    // DeleteSet removes the set
    rpc DeleteSet(IdRequest) returns (Set) {}

    // UpdateSet updates either namespace id or configuration id of the set
    rpc UpdateSet(UpdateSetRequest) returns (Set) {}

    // AddNamespace creates a new namespace
    rpc AddNamespace(AddNamespaceRequest) returns (Namespace) {}
    
    // DeleteNamespace removes the namespace
    rpc DeleteNamespace(IdRequest) returns (Namespace) {}

    // UpdateNamespace updates the namespace.
    rpc UpdateNamespace(UpdateNamespaceRequest) returns (Namespace) {}

    // GetNamespaces returns a list with namespaces
    rpc GetNamespaces(ListRequest) returns (NamespaceListResponse) {}
    
    // GetManifests return a list of manifests
    rpc GetManifests(ListRequest) returns (ManifestListResponse) {}
    
    // GetManifest return a manifests
    rpc GetManifest(IdRequest) returns (Manifest) {}

    // GetRepositories return a list of repositories
    rpc GetRepositories(ListRequest) returns (RepositoryListResponse) {}

    // AddRepository add a repository
    rpc AddRepository(AddRepositoryRequest) returns (AddRepositoryResponse) {}

}

message IdRequest {
    string id = 1;
}

message ListRequest {
    optional int32 page = 1;
    optional int32 size = 2;
}

message AddSetRequest {
    string id = 1;
    string namespace_id = 2;
    optional string configuration_id = 3;
}

message UpdateSetRequest {
    string id = 1;
    optional string namespace_id = 2;
    optional string configuration_id = 3;
}

message UpdateNamespaceRequest {
    string id = 1;
    bool is_default = 4;
}

message AddNamespaceRequest {
    string id = 1;
    bool is_default = 2;
}

message DevicesListRequest {
    optional bool registered = 1;
    optional bool enroled = 2;
    optional string namespace = 3;
    optional int32 page = 4;
    optional int32 size = 5;
}

message DevicesListResponse {
    repeated Device devices = 1;
    int32 page = 2;
    int32 size = 3;
    int32 total = 4;
}

message UpdateDeviceRequest {
    string id = 1;
    string set_id = 2;
    string namespace_id = 3;
    string configuration_id = 4;
}

message SetsListResponse {
    repeated Set sets = 1;
    int32 page = 2;
    int32 size = 3;
    int32 total = 4;
}

message WorkloadToSetRequest {
    string set_id = 1;
    string workload_id = 2;
}

message ManifestListResponse {
    repeated Manifest manifests = 1;
    int32 page = 2;
    int32 size = 3;
    int32 total = 4;
}

message AddRepositoryRequest {
    string url = 1;
    string name = 2;
    string auth_method = 3;
    string auth_secret_path = 4;
}

message AddRepositoryResponse {
    string url = 1;
    string name = 2;
}

message RepositoryListResponse {
    repeated Repository repositories = 1;
    int32 page = 2;
    int32 size = 3;
    int32 total = 4;
}

message NamespaceListResponse {
    repeated Namespace namespaces = 1;
    int32 page = 2;
    int32 size = 3;
    int32 total = 4;
}

message Repository {
   string id = 1;
   string url = 2;
   string branch = 3;
   string local_path = 4;
   string current_head_sha = 5;
   string target_head_sha = 6;
   int32 pull_period = 7;
}

message Manifest {
    string id = 1;
    string version = 2;
    string name = 3;
    string hash = 4;
    string description = 5;
    bool valid = 6;
    string path = 7;
    repeated Selector selectors = 8;
    bool rootless = 9;
    repeated string secrets = 10;
    map<string,string> labels = 11;
    repeated string pods = 12;
    repeated string configmaps = 13;
    repeated string devices = 14;
    repeated string sets = 15;
    repeated string namespaces = 16;
}

message Selector {
    string resource_type = 1;
    string value = 2;
}

message Namespace {
    string id = 1;
    bool is_default = 2;
    string configuration = 3;
    repeated string devices = 4;
    repeated string sets = 5;
    repeated string manifests = 6;
}
